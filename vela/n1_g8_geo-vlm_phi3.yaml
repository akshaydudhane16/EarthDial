---
# Source: pytorchjob-generator/templates/appwrapper.yaml
apiVersion: workload.codeflare.dev/v1beta2
kind: AppWrapper
metadata:
    name: n1-g8-geo-vlm-phi3-jbarry-debug
    namespace: geo-vlm
    annotations:
        workload.codeflare.dev.mlbatch/pytorchGeneratorVersion: "1.1.5"
    labels:
        kueue.x-k8s.io/queue-name: default-queue        
spec:
    components:
        - template:
                  apiVersion: "kubeflow.org/v1"
                  kind: "PyTorchJob"
                  metadata:
                      name: n1-g8-geo-vlm-phi3-jbarry-debug
                      namespace: geo-vlm
                  spec:
                      pytorchReplicaSpecs:
                          Master:
                              replicas: 1
                              restartPolicy: Never
                              template:
                                  metadata:                                      
                                      namespace: geo-vlm
                                  spec:                                      
                                      imagePullSecrets:
                                          - name: all-icr-io                                                                                 
                                      priorityClassName: default-priority
                                      affinity:
                                        nodeAffinity:
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            nodeSelectorTerms:
                                            - matchExpressions:
                                              - key: autopilot.ibm.com/gpuhealth
                                                operator: NotIn
                                                values:
                                                - ERR
                                                - TESTING
                                                - EVICT                                      
                                      volumes:
                                          - name: pvc-volume
                                            persistentVolumeClaim:
                                                claimName: eo-fm-cloud-vela-mbzuai-train-pvc
                                          - name: dshm
                                            emptyDir:
                                                medium: Memory
                                      containers:
                                          - name: pytorch
                                            image: us.icr.io/cil15-shared-registry/eofm/eofm-base-geovlm-granite:latest
                                            imagePullPolicy: Always                                                                                        
                                            env:
                                              - name: HF_HOME
                                                value: "/app/cache"
                                              - name: TRITON_CACHE_DIR
                                                value: "/app/cache"
                                              - name: TRITON_DUMP_DIR
                                                value: "/app/cache"
                                              - name: TRITON_OVERRIDE_DIR
                                                value: "/app/cache"
                                              - name: CUDA_LAUNCH_BLOCKING
                                                value: "1"
                                              - name: TORCH_EXTENSIONS_DIR
                                                value: "/app/cache"
                                              - name: GIT_PAT
                                                valueFrom:
                                                  secretKeyRef:
                                                    key: accesstoken
                                                    name: vela-git-access                                       
                                            volumeMounts:
                                                - name: pvc-volume
                                                  mountPath: /cos
                                                - name: dshm
                                                  mountPath: "/dev/shm"                                            
                                            resources:
                                                requests:
                                                    cpu: 8
                                                    nvidia.com/gpu: 8
                                                    memory: 400Gi
                                                    nvidia.com/roce_gdr: 0
                                                limits:
                                                    cpu: 8
                                                    nvidia.com/gpu: 8
                                                    memory: 400Gi
                                                    nvidia.com/roce_gdr: 0                                            
                                            command:
                                                - sh
                                                - -c
                                                - |
                                                  echo "Environment variables set by the kubeflow training operator:"
                                                  echo ${MASTER_ADDR}:${MASTER_PORT}
                                                  echo "PYTHONUNBUFFERED:"${PYTHONUNBUFFERED}
                                                  echo My global rank is ${RANK} / ${WORLD_SIZE}
                                                  echo "Other injected environment variables:"
                                                  echo "NVME_MOUNT_PATH: "${NVME_MOUNT_PATH}
                                                  #
                                                  # User commands
                                                  #
                                                  git clone -b package_name_difference https://sagarsoni:${GIT_PAT}@github.ibm.com/sagarsoni/EarthDial.git
                                                  mkdir -p /cos/Model_Files/Model_Weights/4B_Model/4B_Stage2_RGB_Temporal_20Dec
                                                  cd EarthDial/src
                                                  echo executing: torchrun --nnodes=${WORLD_SIZE} --node_rank=${RANK} --nproc_per_node=2 --rdzv_id=101 --rdzv_endpoint="${MASTER_ADDR}:${MASTER_PORT}" <file> <cmds>
                                                  torchrun --nnodes=${WORLD_SIZE} \
                                                    --node_rank=${RANK} \
                                                    --nproc_per_node=8 \
                                                    --rdzv_id=101 \
                                                    --rdzv_endpoint="${MASTER_ADDR}:${MASTER_PORT}" \
                                                    earthdial/train/finetune.py \
                                                    --model_name /cos/Model_Files/Model_Weights/4B_Model/4B_Full_6Nov_pretrain_VIT_MLP_LLM_1/ \
                                                    --conv_style "phi3-chat" \
                                                    --output_dir /cos/Model_Files/Model_Weights/4B_Model/4B_Stage2_RGB_Temporal_20Dec \
                                                    --meta_path shell/data/Stage2_RGB_Temporal_Finetunning.json \
                                                    --overwrite_output_dir True \
                                                    --force_image_size 448 \
                                                    --max_dynamic_patch 6 \
                                                    --down_sample_ratio 0.5 \
                                                    --drop_path_rate 0.1 \
                                                    --freeze_llm False \
                                                    --freeze_mlp False \
                                                    --freeze_backbone True \
                                                    --vision_select_layer -1 \
                                                    --dataloader_num_workers 8 \
                                                    --bf16 True \
                                                    --num_train_epochs 1 \
                                                    --per_device_train_batch_size 2 \
                                                    --gradient_accumulation_steps 64 \
                                                    --evaluation_strategy "no" \
                                                    --save_strategy "epoch" \
                                                    --save_total_limit 1 \
                                                    --learning_rate 4e-5 \
                                                    --weight_decay 0.05 \
                                                    --warmup_ratio 0.03 \
                                                    --lr_scheduler_type "cosine" \
                                                    --logging_steps 100 \
                                                    --max_seq_length 4096 \
                                                    --do_train True \
                                                    --grad_checkpoint True \
                                                    --group_by_length True \
                                                    --dynamic_image_size True \
                                                    --use_thumbnail True \
                                                    --ps_version 'v2' \
                                                    --deepspeed shell/zero_stage1_config.json \
                                                    --report_to "tensorboard"
